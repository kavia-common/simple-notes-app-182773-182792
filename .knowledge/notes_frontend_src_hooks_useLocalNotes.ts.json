{"is_source_file": true, "format": "TypeScript", "description": "This file defines a custom React hook called useLocalNotes for managing notes stored in localStorage. It provides functionalities to load, persist, create, update, delete, and filter notes, encapsulating state management and side effects related to notes data.", "external_files": ["../types/note"], "external_methods": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "crypto.randomUUID ? crypto.randomUUID() : String(now) + Math.random().toString(16).slice(2)"], "published": ["useLocalNotes"], "classes": [], "methods": [{"name": "export function useLocalNotes() { useLocalNotes", "description": "A React custom hook that manages notes stored in localStorage, providing create, update, delete, and filtering functionalities.", "scope": "", "scopeKind": ""}], "calls": ["useCallback", "useEffect", "useMemo", "useState", "localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "crypto.randomUUID", "setNotes", "setQuery"], "search-terms": ["useLocalNotes", "localStorage", "notes management", "React hook"], "state": 2, "file_id": 16, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const createNote = useCallback((partial: Pick<Note, \"title\" | \"content\">) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const deleteNote = useCallback((id: string) => {$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "filtered", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const filtered = useMemo(() => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const [notes, setNotes] = useState<Note[]>([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^        const parsed = JSON.parse(raw);$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const [query, setQuery] = useState(\"\");$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^      const raw = localStorage.getItem(storageKey);$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const [notes, setNotes] = useState<Note[]>([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setQuery", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const [query, setQuery] = useState(\"\");$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "storageKey", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const storageKey = \"old-notepad-notes\";$/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^  const updateNote = useCallback((id: string, changes: Partial<Pick<Note, \"title\" | \"content\">>)/", "language": "TypeScript", "kind": "constant", "scope": "useLocalNotes", "scopeKind": "function"}, {"_type": "tag", "name": "useLocalNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-182773-182792/notes_frontend/src/hooks/useLocalNotes.ts", "pattern": "/^export function useLocalNotes() {$/", "language": "TypeScript", "kind": "function"}], "hash": "e46c23623587388663b392a26c31adab", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/hooks/useLocalNotes.ts", "revision_history": [{"33": ""}]}